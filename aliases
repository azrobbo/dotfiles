#!/bin/zsh

# Unix
alias tlf="tail -f"
alias ln='ln -v'
alias mkdir='mkdir -p'
alias ...='../..'
alias l='ls'
alias lh='ls -Alh'
alias ll='ls -Fhl'
alias ls='ls -Fh'
alias -g G='| grep'
alias grep='grep --color=auto'
alias -g M='| less'
alias -g L='| wc -l'
alias -g ONE="| awk '{ print \$1}'"
alias df='df -h'

# git
alias g="git"

# # Bundler
# alias b="bundle"

# # Tests and Specs
# alias t="ruby -I test"
# alias s="rspec"
# alias cuc="cucumber"

# # Rubygems
# alias gi="gem install"
# alias giv="gem install -v"

# # Rails
# alias migrate="rake db:migrate db:test:prepare"
# alias remigrate="rake db:migrate db:migrate:redo db:schema:dump db:test:prepare"
# alias remongrate="rake mongoid:migrate mongoid:migrate:redo"

# # Heroku staging
# alias staging='heroku run console --remote staging'
# alias staging-name='echo `basename $PWD`-staging'
# alias staging-process='watch heroku ps --remote staging'
# alias staging-releases='heroku releases --remote staging'
# alias staging-tail='heroku logs --tail --remote staging'

# # Heroku production
# alias production='heroku run console --remote production'
# alias production-name='echo `basename $PWD`-production'
# alias production-process='watch heroku ps --remote production'
# alias production-releases='heroku releases --remote production'
# alias production-tail='heroku logs --tail --remote production'

# # Heroku databases
# alias db-pull-staging='heroku db:pull --remote staging --confirm `staging-name`'
# alias db-pull-production='heroku db:pull --remote production --confirm `production-name`'
# alias db-copy-production-to-staging='heroku pgbackups:restore DATABASE `heroku pgbackups:url --app production-name` --app `staging-name` --confirm `staging-name`'
# alias db-backup-production='heroku pgbackups:capture --remote production'

# Network
alias whats-my-ip="dig +short myip.opendns.com @208.67.222.222 @208.67.220.220"
alias dis='dig +nocmd +noall +answer'
alias listening-ports='netstat -ntlp | grep LISTEN'

# Change Directory to the active Finder window (else ~/Desktop)
function cdf()
   {
      local fPath=`osascript -e '
      tell app "finder"
         try
            set folderPath to (folder of the front window as alias)
         on error
            set folderPath to (path to desktop folder as alias)
         end try
         POSIX path of folderPath
      end tell'
      `;
      echo "cd $fPath";
      cd "$fPath" > /dev/null
   }

#ip shows ip addresses for eth0, eth1 and external
function ip()
   {
      echo -e "WiFi:\t `ipconfig getifaddr en0 2> /dev/null`"
      echo -e "Ethernet:\t\t `ipconfig getifaddr en1 2> /dev/null`"
      echo -e "External:\t `dig +short myip.opendns.com @208.67.222.222 @208.67.220.220`"
      echo ""
   }

# open man page in Preview
pman()
{
	man -t "${1}" | open -f -a /Appllication/Preview.app/
}

# Dash
dash() { open "dash://$*" }

# GRC colourify
GRC=`which grc`
if [ "$TERM" != dumb ] && [ -n "$GRC" ]
then
	alias arp='colourify -c conf.traceroute arp'
	alias tail='colourify -c conf.log tail'
	alias ps='colourify -c conf.ps ps'
	alias ifconfig='colourify -c conf.traceroute ifconfig'
	alias nmap='colourify -c conf.nmap nmap'
	alias lsof='colourify -c conf.traceroute lsof'
	alias dig='colourify -c conf.traceroute dig'
	alias host='colourify -c conf.traceroute host'
	alias curl='colourify -c conf.curl curl'
fi

